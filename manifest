# PyCoGAPS  urn:lsid:broad.mit.edu:cancer.software.genepattern.module.analysis:00417:999999999
#Wed Jul 13 10:16:25 PDT 2022
JVMLevel=
LSID=urn\:lsid\:broad.mit.edu\:cancer.software.genepattern.module.analysis\:00417\:999999999
author=Ashley Tsang, Johns-Hopkins - Fertig Lab, Ted Liefeld ;UCSD - Mesirov Lab
categories=administration
commandLine=python3 /home/user/pycogaps/run_pycogaps.py --path <input.file> <output.filename> <num.patterns> <num.iterations> <seed> <use.sparse.optimization> <num.threads> <messages> <output.frequency> <uncertainty> <checkpoint.out.filename> <checkpoint.in.file> <transpose.data> <worker.ID> <asynchronous.updates> <n.snapshots> <snapshot.phase> <alpha.A> <alpha.P> <max.Gibbs.Mass.A> <max.Gibbs.Mass.P> <distributed> <num.sets> <cut> <min.NS> <max.NS> <explicit.sets> <sampling.annotation> <sampling.weight> <subset.indices> <subset.dimension> <gene.names> <sample.names> <fixed.patterns> <which.matrix.fixed> <take.pump.samples> <hdf.key> <hdf.row.key> <hdf.col.key>
cpuType=any
description=Coordinated Gene Activity in Pattern Sets (CoGAPS) implements a Bayesian MCMC matrix factorization algorithm, GAPS, and links it to gene set statistic methods to infer biological process activity. It can be used to perform sparse matrix factorization on any data, and when this data represents biomolecules, to do gene set analysis. This package, PyCoGAPS, presents a unified Python interface, with a parallel, efficient underlying implementation
documentationUrl=https\://github.com/FertigLab/pycogaps\#readme
fileFormat=pkl
job.cpuCount=
job.docker.image=ashleyt2000/pycogaps\:gpn_pycogaps
job.memory=
job.walltime=
language=any
name=PyCoGAPS
os=any
p10_MODE=IN
p10_TYPE=FILE
p10_default_value=
p10_description=uncertainty matrix - either a matrix or a supported file type
p10_fileFormat=
p10_flag=--uncertainty
p10_name=uncertainty
p10_numValues=0..1
p10_optional=
p10_prefix=
p10_prefix_when_specified=
p10_type=java.io.File
p10_value=
p11_MODE=
p11_TYPE=TEXT
p11_default_value=gaps_checkpoint.out
p11_description=name of the checkpoint file to create
p11_fileFormat=
p11_flag=--checkpointOutFile
p11_name=checkpoint.out.filename
p11_numValues=0..1
p11_optional=
p11_prefix=
p11_prefix_when_specified=
p11_type=java.lang.String
p11_value=
p12_MODE=IN
p12_TYPE=FILE
p12_default_value=
p12_description=if this is provided, CoGAPS runs from the checkpoint contained in this file
p12_fileFormat=
p12_flag=--checkpointInFile
p12_name=checkpoint.in.file
p12_numValues=0..1
p12_optional=on
p12_prefix=--checkpointInFile
p12_prefix_when_specified=--checkpointInFile
p12_type=java.io.File
p12_value=
p13_MODE=
p13_TYPE=TEXT
p13_default_value=False
p13_description=T/F for transposing data while reading it in - useful for data that is stored as samples x genes since CoGAPS requires data to be genes x samples 
p13_fileFormat=
p13_flag=--transposeData
p13_name=transpose.data
p13_numValues=0..1
p13_optional=
p13_prefix=
p13_prefix_when_specified=
p13_type=java.lang.String
p13_value=True\=True;False\=False
p14_MODE=
p14_TYPE=Integer
p14_default_value=1
p14_description=if calling CoGAPS in parallel the worker ID can be specified
p14_fileFormat=
p14_flag=--workerID
p14_name=worker.ID
p14_numValues=0..1
p14_optional=
p14_prefix=
p14_prefix_when_specified=
p14_type=java.lang.Integer
p14_value=
p15_MODE=
p15_TYPE=TEXT
p15_default_value=False
p15_description=enable asynchronous updating which allows for multi-threaded runs
p15_fileFormat=
p15_flag=--asynchronousUpdates
p15_name=asynchronous.updates
p15_numValues=0..1
p15_optional=
p15_prefix=
p15_prefix_when_specified=
p15_type=java.lang.String
p15_value=True\=True;False\=False
p16_MODE=
p16_TYPE=Integer
p16_default_value=0
p16_description=how many snapshots to take in each phase, setting this to 0 disables snapshots
p16_fileFormat=
p16_flag=--nSnapshots
p16_name=n.snapshots
p16_numValues=0..1
p16_optional=
p16_prefix=
p16_prefix_when_specified=
p16_type=java.lang.Integer
p16_value=
p17_MODE=
p17_TYPE=TEXT
p17_default_value=sampling
p17_description=which phase to take snapsjots in e.g. "equilibration", "sampling", "all"
p17_fileFormat=
p17_flag=--snapshotPhase
p17_name=snapshot.phase
p17_numValues=0..1
p17_optional=
p17_prefix=
p17_prefix_when_specified=
p17_type=java.lang.String
p17_value=sampling\=sampling;equilibration\=equilibration;all\=all
p18_MODE=
p18_TYPE=Floating Point
p18_default_value=.01
p18_description=\ sparsity parameter for feature matrix
p18_fileFormat=
p18_flag=--alphaA
p18_name=alpha.A
p18_numValues=0..1
p18_optional=
p18_prefix=
p18_prefix_when_specified=
p18_type=java.lang.Float
p18_value=
p19_MODE=
p19_TYPE=Floating Point
p19_default_value=.01
p19_description=sparsity parameter for sample matrix
p19_fileFormat=
p19_flag=--alphaP
p19_name=alpha.P
p19_numValues=0..1
p19_optional=
p19_prefix=
p19_prefix_when_specified=
p19_type=java.lang.Float
p19_value=
p1_MODE=IN
p1_TYPE=FILE
p1_default_value=
p1_description=Input data file 
p1_fileFormat=txt
p1_flag=
p1_name=input.file
p1_numValues=0..1
p1_optional=
p1_prefix=
p1_prefix_when_specified=
p1_type=java.io.File
p1_value=
p20_MODE=
p20_TYPE=Floating Point
p20_default_value=100
p20_description=
p20_fileFormat=
p20_flag=--maxGibbsMassA
p20_name=max.Gibbs.Mass.A
p20_numValues=0..1
p20_optional=
p20_prefix=
p20_prefix_when_specified=
p20_type=java.lang.Float
p20_value=
p21_MODE=
p21_TYPE=Floating Point
p21_default_value=100
p21_description=
p21_fileFormat=
p21_flag=--maxGibbsMassP
p21_name=max.Gibbs.Mass.P
p21_numValues=0..1
p21_optional=
p21_prefix=
p21_prefix_when_specified=
p21_type=java.lang.Float
p21_value=
p22_MODE=
p22_TYPE=TEXT
p22_default_value=
p22_description=either null or genome-wide
p22_fileFormat=
p22_flag=--distributed
p22_name=distributed
p22_numValues=0..1
p22_optional=
p22_prefix=
p22_prefix_when_specified=
p22_type=java.lang.String
p22_value=\ \=None;Genome-wide\=Genome-wide
p23_MODE=
p23_TYPE=Integer
p23_default_value=4
p23_description=number of sets to break data into
p23_fileFormat=
p23_flag=--nSets
p23_name=num.sets
p23_numValues=1..1
p23_optional=
p23_prefix=
p23_prefix_when_specified=
p23_type=java.lang.Integer
p23_value=
p24_MODE=
p24_TYPE=Integer
p24_default_value=
p24_description=number of branches at which to cut dendrogram used in pattern matching\n default\: nPatterns
p24_fileFormat=
p24_flag=--cut
p24_name=cut
p24_numValues=0..1
p24_optional=on
p24_prefix=--cut
p24_prefix_when_specified=--cut
p24_type=java.lang.Integer
p24_value=
p25_MODE=
p25_TYPE=Integer
p25_default_value=
p25_description=minimum of individual set contributions a cluster must contain\n    \# default\: math.ceil(cut / 2)
p25_fileFormat=
p25_flag=--minNS
p25_name=min.NS
p25_numValues=0..1
p25_optional=on
p25_prefix=--minNS
p25_prefix_when_specified=--minNS
p25_type=java.lang.Integer
p25_value=
p26_MODE=
p26_TYPE=Integer
p26_default_value=
p26_description=maximum of individual set contributions a cluster can contain\n default\: minNS + nSets
p26_fileFormat=
p26_flag=--maxNS
p26_name=max.NS
p26_numValues=0..1
p26_optional=on
p26_prefix=--maxNS
p26_prefix_when_specified=--maxNS
p26_type=java.lang.Integer
p26_value=
p27_MODE=IN
p27_TYPE=FILE
p27_default_value=
p27_description=specify subsets by index or name
p27_fileFormat=
p27_flag=--explicitSets
p27_name=explicit.sets
p27_numValues=0..1
p27_optional=on
p27_prefix=--explicitSets
p27_prefix_when_specified=--explicitSets
p27_type=java.io.File
p27_value=
p28_MODE=IN
p28_TYPE=FILE
p28_default_value=
p28_description=specify categories along the rows (cols) to use for weighted sampling
p28_fileFormat=
p28_flag=--samplingAnnotation
p28_name=sampling.annotation
p28_numValues=0..1
p28_optional=on
p28_prefix=--samplingAnnotation
p28_prefix_when_specified=--samplingAnnotation
p28_type=java.io.File
p28_value=
p29_MODE=IN
p29_TYPE=FILE
p29_default_value=
p29_description=weights associated with  samplingAnnotation
p29_fileFormat=
p29_flag=-samplingWeight
p29_name=sampling.weight
p29_numValues=0..1
p29_optional=on
p29_prefix=-samplingWeight
p29_prefix_when_specified=-samplingWeight
p29_type=java.io.File
p29_value=
p2_MODE=
p2_TYPE=TEXT
p2_default_value=<input.file_basename>_result.pkl
p2_description=The result output file name (output saved as a .pkl file)
p2_fileFormat=
p2_flag=--resultFile
p2_name=output.filename
p2_numValues=0..1
p2_optional=
p2_prefix=
p2_prefix_when_specified=
p2_type=java.lang.String
p2_value=
p30_MODE=IN
p30_TYPE=FILE
p30_default_value=
p30_description=set of indices to use from the data
p30_fileFormat=
p30_flag=--subsetIndices
p30_name=subset.indices
p30_numValues=0..1
p30_optional=on
p30_prefix=--subsetIndices
p30_prefix_when_specified=--subsetIndices
p30_type=java.io.File
p30_value=
p31_MODE=
p31_TYPE=TEXT
p31_default_value=0
p31_description=which dimension (rows, cols) to subset
p31_fileFormat=
p31_flag=--subsetDim
p31_name=subset.dimension
p31_numValues=0..1
p31_optional=
p31_prefix=
p31_prefix_when_specified=
p31_type=java.lang.String
p31_value=0\=Rows;1\=Columns
p32_MODE=IN
p32_TYPE=FILE
p32_default_value=
p32_description=vector of names of genes in data
p32_fileFormat=
p32_flag=--geneNames
p32_name=gene.names
p32_numValues=0..1
p32_optional=on
p32_prefix=--geneNames
p32_prefix_when_specified=--geneNames
p32_type=java.io.File
p32_value=
p33_MODE=IN
p33_TYPE=FILE
p33_default_value=
p33_description=vector of names of samples in data
p33_fileFormat=
p33_flag=--sampleNames
p33_name=sample.names
p33_numValues=0..1
p33_optional=on
p33_prefix=--sampleNames
p33_prefix_when_specified=--sampleNames
p33_type=java.io.File
p33_value=
p34_MODE=
p34_TYPE=TEXT
p34_default_value=
p34_description=ix either 'A' or 'P' matrix to these values, in the context of distributed CoGAPS, the first phase is skipped and fixedPatterns\: \nis used for all sets allowing manual pattern matching, as well as fixed runs of standard CoGAPS
p34_fileFormat=
p34_flag=--fixedPatterns
p34_name=fixed.patterns
p34_numValues=0..1
p34_optional=
p34_prefix=--fixedPatterns
p34_prefix_when_specified=--fixedPatterns
p34_type=java.lang.String
p34_value=
p35_MODE=
p35_TYPE=TEXT
p35_default_value=A
p35_description=\ \# either 'A' or 'P', indicating which matrix is fixed
p35_fileFormat=
p35_flag=--whichMatrixFixed
p35_name=which.matrix.fixed
p35_numValues=0..1
p35_optional=on
p35_prefix=
p35_prefix_when_specified=
p35_type=java.lang.String
p35_value=A\=A;P\=P
p36_MODE=
p36_TYPE=TEXT
p36_default_value=False
p36_description=whether or not to take PUMP samples
p36_fileFormat=
p36_flag=--takePumpSamples
p36_name=take.pump.samples
p36_numValues=0..1
p36_optional=
p36_prefix=
p36_prefix_when_specified=
p36_type=java.lang.String
p36_value=True\=True;False\=False
p37_MODE=
p37_TYPE=TEXT
p37_default_value=
p37_description=for reading .h5 files
p37_fileFormat=
p37_flag=--hdfKey
p37_name=hdf.key
p37_numValues=0..1
p37_optional=on
p37_prefix=--hdfKey
p37_prefix_when_specified=--hdfKey
p37_type=java.lang.String
p37_value=
p38_MODE=
p38_TYPE=TEXT
p38_default_value=
p38_description=\ for reading .h5 files
p38_fileFormat=
p38_flag=--hdfRowKey
p38_name=hdf.row.key
p38_numValues=0..1
p38_optional=on
p38_prefix=--hdfRowKey
p38_prefix_when_specified=--hdfRowKey
p38_type=java.lang.String
p38_value=
p39_MODE=
p39_TYPE=TEXT
p39_default_value=
p39_description=\ for reading .h5 files
p39_fileFormat=
p39_flag=--hdfColKey
p39_name=hdf.col.key
p39_numValues=0..1
p39_optional=on
p39_prefix=--hdfColKey
p39_prefix_when_specified=--hdfColKey
p39_type=java.lang.String
p39_value=
p3_MODE=
p3_TYPE=Integer
p3_default_value=3
p3_description=The number of patterns PyCoGAPS will learn
p3_fileFormat=
p3_flag=-nPatterns
p3_name=num.patterns
p3_numValues=0..1
p3_optional=
p3_prefix=
p3_prefix_when_specified=
p3_type=java.lang.Integer
p3_value=
p4_MODE=
p4_TYPE=Integer
p4_default_value=1000
p4_description=The number of iterations for each phase of the algorithm
p4_fileFormat=
p4_flag=-nIterations
p4_name=num.iterations
p4_numValues=0..1
p4_optional=
p4_prefix=
p4_prefix_when_specified=
p4_type=java.lang.Integer
p4_value=
p5_MODE=
p5_TYPE=Integer
p5_default_value=0
p5_description=random number generator seed
p5_fileFormat=
p5_flag=--seed
p5_name=seed
p5_numValues=0..1
p5_optional=
p5_prefix=
p5_prefix_when_specified=
p5_type=java.lang.Integer
p5_value=
p6_MODE=
p6_TYPE=TEXT
p6_default_value=False
p6_description=speeds up performance with sparse data (roughly >80% of data is zero), note this can only be used with the default uncertainty
p6_fileFormat=
p6_flag=--useSparseOptimization
p6_name=use.sparse.optimization
p6_numValues=0..1
p6_optional=
p6_prefix=
p6_prefix_when_specified=
p6_type=java.lang.String
p6_value=True\=True;False\=False
p7_MODE=
p7_TYPE=Integer
p7_default_value=1
p7_description=\ maximum number of threads to run on
p7_fileFormat=
p7_flag=-nThreads
p7_name=num.threads
p7_numValues=0..1
p7_optional=
p7_prefix=
p7_prefix_when_specified=
p7_type=java.lang.Integer
p7_value=
p8_MODE=
p8_TYPE=TEXT
p8_default_value=False
p8_description=\ T/F for displaying output to stdout
p8_fileFormat=
p8_flag=--messages
p8_name=messages
p8_numValues=0..1
p8_optional=
p8_prefix=
p8_prefix_when_specified=
p8_type=java.lang.String
p8_value=True\=True;False\=False
p9_MODE=
p9_TYPE=Integer
p9_default_value=500
p9_description=number of iterations between each output (set to 0 to disable status updates)
p9_fileFormat=
p9_flag=-outputFrequency
p9_name=output.frequency
p9_numValues=0..1
p9_optional=
p9_prefix=
p9_prefix_when_specified=
p9_type=java.lang.Integer
p9_value=
privacy=public
publicationDate=07/13/2022 08\:54 
quality=development
src.repo=https\://github.com/genepattern/ExampleModule/tree/v3
taskDoc=
taskType=administration
userid=ted
version=Initial PyGoGAPS module implementation
