# PyCoGAPS  urn:lsid:broad.mit.edu:cancer.software.genepattern.module.analysis:00417:999999999.1
#Mon Aug 15 13:49:23 UTC 2022
JVMLevel=
LSID=urn\:lsid\:broad.mit.edu\:cancer.software.genepattern.module.analysis\:00417\:999999999.1
author=Ashley Tsang, Johns-Hopkins - Fertig Lab, Ted Liefeld ;UCSD - Mesirov Lab
categories=beta
commandLine=python3 /home/user/pycogaps/run_pycogaps.py  <input.file> <output.filename> <num.patterns> <num.iterations> <seed> <use.sparse.optimization> <num.threads> <messages> <output.frequency> <uncertainty> <checkpoint.out.filename> <checkpoint.in.file>  <worker.ID> <asynchronous.updates> <n.snapshots> <snapshot.phase> <alpha.A> <alpha.P> <max.Gibbs.Mass.A> <max.Gibbs.Mass.P> <distributed> <num.sets> <cut> <min.NS> <max.NS> <explicit.sets> <sampling.annotation> <sampling.weight> <subset.indices> <subset.dimension> <gene.names> <sample.names> <fixed.patterns> <which.matrix.fixed> <take.pump.samples> <hdf.key> <hdf.row.key> <hdf.col.key>
cpuType=any
description=Coordinated Gene Activity in Pattern Sets (CoGAPS) implements a Bayesian MCMC matrix factorization algorithm, GAPS, and links it to gene set statistic methods to infer biological process activity. It can be used to perform sparse matrix factorization on any data, and when this data represents biomolecules, to do gene set analysis. This package, PyCoGAPS, presents a unified Python interface, with a parallel, efficient underlying implementation.
documentationUrl=https\://github.com/FertigLab/pycogaps\#readme
fileFormat=pkl
job.cpuCount=
job.docker.image=fertiglab/pycogaps-gpn\:0.1
job.memory=
job.walltime=
language=any
name=PyCoGAPS
os=any
p10_MODE=IN
p10_TYPE=FILE
p10_default_value=
p10_description=uncertainty matrix - either a matrix or a supported file type
p10_fileFormat=.csv;csv;csv, txt
p10_flag=--uncertainty 
p10_name=uncertainty
p10_numValues=0..1
p10_optional=on
p10_prefix=--uncertainty 
p10_prefix_when_specified=--uncertainty 
p10_type=java.io.File
p10_value=
p11_MODE=
p11_TYPE=TEXT
p11_default_value=gaps_checkpoint.out
p11_description=name of the checkpoint file to create
p11_fileFormat=
p11_flag=--checkpointOutFile 
p11_name=checkpoint.out.filename
p11_numValues=0..1
p11_optional=
p11_prefix=--checkpointOutFile 
p11_prefix_when_specified=--checkpointOutFile 
p11_type=java.lang.String
p11_value=
p12_MODE=IN
p12_TYPE=FILE
p12_default_value=
p12_description=if this is provided, CoGAPS runs from the checkpoint contained in this file
p12_fileFormat=
p12_flag=--checkpointInFile 
p12_name=checkpoint.in.file
p12_numValues=0..1
p12_optional=on
p12_prefix=--checkpointInFile 
p12_prefix_when_specified=--checkpointInFile 
p12_type=java.io.File
p12_value=
p13_MODE=
p13_TYPE=Integer
p13_default_value=1
p13_description=if calling CoGAPS in parallel the worker ID can be specified
p13_fileFormat=
p13_flag=--workerID 
p13_name=worker.ID
p13_numValues=0..1
p13_optional=
p13_prefix=--workerID 
p13_prefix_when_specified=--workerID 
p13_type=java.lang.Integer
p13_value=
p14_MODE=
p14_TYPE=TEXT
p14_default_value=False
p14_description=enable asynchronous updating which allows for multi-threaded runs
p14_fileFormat=
p14_flag=--asynchronousUpdates 
p14_name=asynchronous.updates
p14_numValues=0..1
p14_optional=
p14_prefix=--asynchronousUpdates 
p14_prefix_when_specified=--asynchronousUpdates 
p14_type=java.lang.String
p14_value=True\=True;False\=False
p15_MODE=
p15_TYPE=Integer
p15_default_value=0
p15_description=how many snapshots to take in each phase, setting this to 0 disables snapshots
p15_fileFormat=
p15_flag=--nSnapshots 
p15_name=n.snapshots
p15_numValues=0..1
p15_optional=
p15_prefix=--nSnapshots 
p15_prefix_when_specified=--nSnapshots 
p15_type=java.lang.Integer
p15_value=
p16_MODE=
p16_TYPE=TEXT
p16_default_value=sampling
p16_description=which phase to take snapsjots in e.g. "equilibration", "sampling", "all"
p16_fileFormat=
p16_flag=--snapshotPhase 
p16_name=snapshot.phase
p16_numValues=0..1
p16_optional=
p16_prefix=--snapshotPhase 
p16_prefix_when_specified=--snapshotPhase 
p16_type=java.lang.String
p16_value=sampling\=sampling;equilibration\=equilibration;all\=all
p17_MODE=
p17_TYPE=Floating Point
p17_default_value=.01
p17_description=\ sparsity parameter for feature matrix
p17_fileFormat=
p17_flag=--alphaA 
p17_name=alpha.A
p17_numValues=0..1
p17_optional=
p17_prefix=--alphaA 
p17_prefix_when_specified=--alphaA 
p17_type=java.lang.Float
p17_value=
p18_MODE=
p18_TYPE=Floating Point
p18_default_value=.01
p18_description=sparsity parameter for sample matrix
p18_fileFormat=
p18_flag=--alphaP 
p18_name=alpha.P
p18_numValues=0..1
p18_optional=
p18_prefix=--alphaP 
p18_prefix_when_specified=--alphaP 
p18_type=java.lang.Float
p18_value=
p19_MODE=
p19_TYPE=Floating Point
p19_default_value=100
p19_description=
p19_fileFormat=
p19_flag=--maxGibbsMassA 
p19_name=max.Gibbs.Mass.A
p19_numValues=0..1
p19_optional=
p19_prefix=--maxGibbsMassA 
p19_prefix_when_specified=--maxGibbsMassA 
p19_type=java.lang.Float
p19_value=
p1_MODE=IN
p1_TYPE=FILE
p1_default_value=
p1_description=Input data file 
p1_fileFormat=txt
p1_flag=--path 
p1_name=input.file
p1_numValues=0..1
p1_optional=
p1_prefix=--path 
p1_prefix_when_specified=--path 
p1_type=java.io.File
p1_value=
p20_MODE=
p20_TYPE=Floating Point
p20_default_value=100
p20_description=
p20_fileFormat=
p20_flag=--maxGibbsMassP 
p20_name=max.Gibbs.Mass.P
p20_numValues=0..1
p20_optional=
p20_prefix=--maxGibbsMassP 
p20_prefix_when_specified=--maxGibbsMassP 
p20_type=java.lang.Float
p20_value=
p21_MODE=
p21_TYPE=TEXT
p21_default_value=
p21_description=either null or genome-wide
p21_fileFormat=
p21_flag=--distributed 
p21_name=distributed
p21_numValues=0..1
p21_optional=on
p21_prefix=--distributed 
p21_prefix_when_specified=--distributed 
p21_type=java.lang.String
p21_value=\ \=None;Genome-wide\=Genome-wide
p22_MODE=
p22_TYPE=Integer
p22_default_value=4
p22_description=number of sets to break data into
p22_fileFormat=
p22_flag=--nSets 
p22_name=num.sets
p22_numValues=1..1
p22_optional=
p22_prefix=--nSets 
p22_prefix_when_specified=--nSets 
p22_type=java.lang.Integer
p22_value=
p23_MODE=
p23_TYPE=Integer
p23_default_value=
p23_description=number of branches at which to cut dendrogram used in pattern matching\n default\: nPatterns
p23_fileFormat=
p23_flag=--cut 
p23_name=cut
p23_numValues=0..1
p23_optional=on
p23_prefix=--cut 
p23_prefix_when_specified=--cut 
p23_type=java.lang.Integer
p23_value=
p24_MODE=
p24_TYPE=Integer
p24_default_value=
p24_description=minimum of individual set contributions a cluster must contain\n    \# default\: math.ceil(cut / 2)
p24_fileFormat=
p24_flag=--minNS 
p24_name=min.NS
p24_numValues=0..1
p24_optional=on
p24_prefix=--minNS 
p24_prefix_when_specified=--minNS 
p24_type=java.lang.Integer
p24_value=
p25_MODE=
p25_TYPE=Integer
p25_default_value=
p25_description=maximum of individual set contributions a cluster can contain\n default\: minNS + nSets
p25_fileFormat=
p25_flag=--maxNS 
p25_name=max.NS
p25_numValues=0..1
p25_optional=on
p25_prefix=--maxNS 
p25_prefix_when_specified=--maxNS 
p25_type=java.lang.Integer
p25_value=
p26_MODE=IN
p26_TYPE=FILE
p26_default_value=
p26_description=specify subsets by index or name
p26_fileFormat=.csv;csv;csv, txt
p26_flag=--explicitSets 
p26_name=explicit.sets
p26_numValues=0..1
p26_optional=on
p26_prefix=--explicitSets 
p26_prefix_when_specified=--explicitSets 
p26_type=java.io.File
p26_value=
p27_MODE=IN
p27_TYPE=FILE
p27_default_value=
p27_description=specify categories along the rows (cols) to use for weighted sampling
p27_fileFormat=.csv;csv;csv, txt
p27_flag=--samplingAnnotation 
p27_name=sampling.annotation
p27_numValues=0..1
p27_optional=on
p27_prefix=--samplingAnnotation 
p27_prefix_when_specified=--samplingAnnotation 
p27_type=java.io.File
p27_value=
p28_MODE=IN
p28_TYPE=FILE
p28_default_value=
p28_description=weights associated with  samplingAnnotation
p28_fileFormat=txt
p28_flag=--samplingWeight 
p28_name=sampling.weight
p28_numValues=0..1
p28_optional=on
p28_prefix=--samplingWeight 
p28_prefix_when_specified=--samplingWeight 
p28_type=java.io.File
p28_value=
p29_MODE=IN
p29_TYPE=FILE
p29_default_value=
p29_description=set of indices to use from the data
p29_fileFormat=
p29_flag=--subsetIndices 
p29_name=subset.indices
p29_numValues=0..1
p29_optional=on
p29_prefix=--subsetIndices 
p29_prefix_when_specified=--subsetIndices 
p29_type=java.io.File
p29_value=
p2_MODE=
p2_TYPE=TEXT
p2_default_value=<input.file_basename>_result.pkl
p2_description=The result output file name (output saved as a .pkl file)
p2_fileFormat=
p2_flag=--resultFile 
p2_name=output.filename
p2_numValues=0..1
p2_optional=
p2_prefix=--resultFile 
p2_prefix_when_specified=--resultFile 
p2_type=java.lang.String
p2_value=
p30_MODE=
p30_TYPE=TEXT
p30_default_value=0
p30_description=which dimension (rows, cols) to subset
p30_fileFormat=
p30_flag=--subsetDim 
p30_name=subset.dimension
p30_numValues=0..1
p30_optional=
p30_prefix=--subsetDim 
p30_prefix_when_specified=--subsetDim 
p30_type=java.lang.String
p30_value=0\=Rows;1\=Columns
p31_MODE=IN
p31_TYPE=FILE
p31_default_value=
p31_description=vector of names of genes in data
p31_fileFormat=
p31_flag=--geneNames 
p31_name=gene.names
p31_numValues=0..1
p31_optional=on
p31_prefix=--geneNames 
p31_prefix_when_specified=--geneNames 
p31_type=java.io.File
p31_value=
p32_MODE=IN
p32_TYPE=FILE
p32_default_value=
p32_description=vector of names of samples in data
p32_fileFormat=
p32_flag=--sampleNames 
p32_name=sample.names
p32_numValues=0..1
p32_optional=on
p32_prefix=--sampleNames 
p32_prefix_when_specified=--sampleNames 
p32_type=java.io.File
p32_value=
p33_MODE=IN
p33_TYPE=FILE
p33_default_value=
p33_description=ix either 'A' or 'P' matrix to these values, in the context of distributed CoGAPS, the first phase is skipped and fixedPatterns\: \nis used for all sets allowing manual pattern matching, as well as fixed runs of standard CoGAPS
p33_fileFormat=.csv;csv;csv, txt
p33_flag=--fixedPatterns 
p33_name=fixed.patterns
p33_numValues=0..1
p33_optional=on
p33_prefix=--fixedPatterns 
p33_prefix_when_specified=--fixedPatterns 
p33_type=java.io.File
p33_value=
p34_MODE=
p34_TYPE=TEXT
p34_default_value=A
p34_description=\ \# either 'A' or 'P', indicating which matrix is fixed
p34_fileFormat=
p34_flag=--whichMatrixFixed 
p34_name=which.matrix.fixed
p34_numValues=0..1
p34_optional=on
p34_prefix=--whichMatrixFixed 
p34_prefix_when_specified=--whichMatrixFixed 
p34_type=java.lang.String
p34_value=A\=A;P\=P
p35_MODE=
p35_TYPE=TEXT
p35_default_value=False
p35_description=whether or not to take PUMP samples
p35_fileFormat=
p35_flag=--takePumpSamples 
p35_name=take.pump.samples
p35_numValues=0..1
p35_optional=
p35_prefix=--takePumpSamples 
p35_prefix_when_specified=--takePumpSamples 
p35_type=java.lang.String
p35_value=True\=True;False\=False
p36_MODE=
p36_TYPE=TEXT
p36_default_value=
p36_description=for reading .h5 files
p36_fileFormat=
p36_flag=--hdfKey 
p36_name=hdf.key
p36_numValues=0..1
p36_optional=on
p36_prefix=--hdfKey 
p36_prefix_when_specified=--hdfKey 
p36_type=java.lang.String
p36_value=
p37_MODE=
p37_TYPE=TEXT
p37_default_value=
p37_description=\ for reading .h5 files
p37_fileFormat=
p37_flag=--hdfRowKey 
p37_name=hdf.row.key
p37_numValues=0..1
p37_optional=on
p37_prefix=--hdfRowKey 
p37_prefix_when_specified=--hdfRowKey 
p37_type=java.lang.String
p37_value=
p38_MODE=
p38_TYPE=TEXT
p38_default_value=
p38_description=\ for reading .h5 files
p38_fileFormat=
p38_flag=--hdfColKey 
p38_name=hdf.col.key
p38_numValues=0..1
p38_optional=on
p38_prefix=--hdfColKey 
p38_prefix_when_specified=--hdfColKey 
p38_type=java.lang.String
p38_value=
p3_MODE=
p3_TYPE=Integer
p3_default_value=3
p3_description=The number of patterns PyCoGAPS will learn
p3_fileFormat=
p3_flag=--nPatterns 
p3_name=num.patterns
p3_numValues=0..1
p3_optional=
p3_prefix=--nPatterns 
p3_prefix_when_specified=--nPatterns 
p3_type=java.lang.Integer
p3_value=
p4_MODE=
p4_TYPE=Integer
p4_default_value=1000
p4_description=The number of iterations for each phase of the algorithm
p4_fileFormat=
p4_flag=--nIterations 
p4_name=num.iterations
p4_numValues=0..1
p4_optional=
p4_prefix=--nIterations 
p4_prefix_when_specified=--nIterations 
p4_type=java.lang.Integer
p4_value=
p5_MODE=
p5_TYPE=Integer
p5_default_value=0
p5_description=random number generator seed
p5_fileFormat=
p5_flag=--seed 
p5_name=seed
p5_numValues=0..1
p5_optional=
p5_prefix=--seed 
p5_prefix_when_specified=--seed 
p5_type=java.lang.Integer
p5_value=
p6_MODE=
p6_TYPE=TEXT
p6_default_value=False
p6_description=speeds up performance with sparse data (roughly >80% of data is zero), note this can only be used with the default uncertainty
p6_fileFormat=
p6_flag=--useSparseOptimization 
p6_name=use.sparse.optimization
p6_numValues=0..1
p6_optional=
p6_prefix=--useSparseOptimization 
p6_prefix_when_specified=--useSparseOptimization 
p6_type=java.lang.String
p6_value=True\=True;False\=False
p7_MODE=
p7_TYPE=Integer
p7_default_value=1
p7_description=\ maximum number of threads to run on
p7_fileFormat=
p7_flag=--nThreads 
p7_name=num.threads
p7_numValues=0..1
p7_optional=
p7_prefix=--nThreads 
p7_prefix_when_specified=--nThreads 
p7_type=java.lang.Integer
p7_value=
p8_MODE=
p8_TYPE=TEXT
p8_default_value=False
p8_description=\ T/F for displaying output to stdout
p8_fileFormat=
p8_flag=--messages 
p8_name=messages
p8_numValues=0..1
p8_optional=
p8_prefix=--messages 
p8_prefix_when_specified=--messages 
p8_type=java.lang.String
p8_value=True\=True;False\=False
p9_MODE=
p9_TYPE=Integer
p9_default_value=500
p9_description=number of iterations between each output (set to 0 to disable status updates)
p9_fileFormat=
p9_flag=--outputFrequency 
p9_name=output.frequency
p9_numValues=0..1
p9_optional=
p9_prefix=--outputFrequency 
p9_prefix_when_specified=--outputFrequency 
p9_type=java.lang.Integer
p9_value=
privacy=public
publicationDate=07/13/2022 08\:54 
quality=development
src.repo=https\://github.com/genepattern/ExampleModule/tree/v3
taskDoc=
taskType=beta
userid=ted
version=Initial PyGoGAPS module implementation
